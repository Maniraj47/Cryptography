# Program 30: CBC-MAC Vulnerability
def cbc_mac_vulnerability():
    print("=== CBC-MAC Vulnerability ===")
    
    print("\nGiven:")
    print("- T = MAC(K, X) for single-block message X")
    print("- Adversary knows X and T")
    
    print("\nAttack:")
    print("Adversary can forge MAC for two-block message")
    print("Message: X || (X ⊕ T)")
    
    print("\nWhy it works:")
    print("Block 1: C1 = E(K, X) = T")
    print("Block 2: C2 = E(K, (X ⊕ T) ⊕ C1)")
    print("       = E(K, (X ⊕ T) ⊕ T)")
    print("       = E(K, X)")
    print("       = T")
    
    print("\nMAC of X || (X ⊕ T) is also T!")
    
    print("\nDemonstration:")
    X = "MESSAGE1"
    T = "MAC_TAG1"
    forged_message = X + " || " + "(" + X + " ⊕ " + T + ")"
    print(f"\nOriginal: {X}")
    print(f"MAC: {T}")
    print(f"Forged message: {forged_message}")
    print(f"Forged MAC: {T} (same!)")
    
    print("\nMitigation: Use CMAC instead")

if __name__ == "__main__":
    cbc_mac_vulnerability()